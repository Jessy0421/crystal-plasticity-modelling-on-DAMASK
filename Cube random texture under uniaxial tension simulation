#name: Uniaxial_tension_1000_64_random

tasks:
  - name: generate_microstructure_seeds #This task generates the grid for a RVE, and the seeds for a Voronoi Tesselation
    method: random
    software: damask
    base:      
      grid_size: [64, 64, 64] 
      num_grains: 1000
      size: [1,1,1] # Dimensions of the RVE
      phase_label: Al
      orientation_coordinate_system:
        x: RD
        y: TD
        z: ND

  - name: generate_volume_element
    method: random_voronoi
    software: damask
    base:
      grid_size: [32, 32, 32]
      homog_label: SX

  - name: visualise_volume_element
    method: VTK
    software: damask

  - name: generate_load_case #This task defines the load that is going to be applied to the RVE
    method: uniaxial
    software: formable
    base: #In this case, the loadcase is uniaxial tension to a target strain of 0.15
      total_times:         [100] 
      num_increments:      [800]  #Number of steps of the simulation
      target_strain_rates: [1.5e-3] # used for numerical reasons, this is not the experimental target strain, is not the m value
      directions:          [x]
      dump_frequency: [1]
    sequences:
      - name: rotations # Rotations are applied to the load to calculate the r-value later
        vals:
          - - axis: [0, 0, 1]
              angle_deg: 0
          - - axis: [0, 0, 1]
              angle_deg: 45
          - - axis: [0, 0, 1]
              angle_deg: 90 

  - name: simulate_volume_element_loading
    method: CP_FFT
    software: DAMASK
    run_options:
      num_cores: 4
      l: short
    output_map_options:
      operations:
        - name: add_stress_Cauchy
          args: { P: P, F: F }
          opts: { add_Mises: true }
        - name: add_strain
          args: { F: F, t: V, m: 0 }
          opts: { add_Mises: true }
        - name: add_strain
          args: { F: F_p, t: V, m: 0 }
          opts: { add_Mises: true }
        - name: add_IPF_color
          args: { l: [0, 0, 1] }
      phase_data:
        - field_name: sigma_vM
          phase_name: Al
          out_name: vol_avg_equivalent_stress
          transforms: [mean_along_axes: 1]
        - field_name: epsilon_V^0(F)_vM
          phase_name: Al
          out_name: vol_avg_equivalent_strain
          transforms: [mean_along_axes: 1]
        - field_name: epsilon_V^0(F_p)_vM
          phase_name: Al
          out_name: vol_avg_equivalent_plastic_strain
          transforms: [mean_along_axes: 1]
          increments:
            - step: 10
      field_data: # Data for each voxel of the RVE
                      # `phase` and `O` field data are required if we want to later plot pole figures from the deformed RVE
        - field_name: phase
        - field_name: O
        - field_name: sigma_vM #Output of VM stress for each voxel of the RVE
          increments:
            - start: 0
              stop: -1
              step: 100
        - field_name: epsilon_V^0(F)_vM #Output of VM strain for each voxel of the RVE
          increments:
            - start: 0
              stop: -1
              step: 100
      grain_data:
        # Extract the grain-averaged orientations at initial and final increments
        - field_name: O
          increments:
            - values: [0, -1]
      visualise: # Generate VTR files for increments
        fields: [F, F_p, P, sigma_vM, O, IPFcolor_(0 0 1), phase, epsilon_V^0(F)_vM]
        increments:
          - start: 0
            stop: -1
            step: 100
    base:
      homogenization_schemes:
        SX:
          mechanical:
            type: pass
          N_constituents: 1
      phases:
        Al:
          lattice: cF
          mechanical:
            output: [F, P, F_p, O]
            elastic:
              type: Hooke
              C_11: 106.75e9
              C_12: 60.41e9
              C_44: 28.34e9
            plastic:
              type: phenopowerlaw
              output: [xi_sl]
              N_sl: [12]
              n_sl: 20
              a_sl: 2.25
              dot_gamma_0_sl: 0.001
              h_0_sl_sl: 573e6
              h_sl_sl: [1, 1, 1.4, 1.4, 1.4, 1.4]
              xi_0_sl: [22e6]
              xi_inf_sl: [129e6]
